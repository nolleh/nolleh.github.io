<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>async on The Computer Programmer, Nolleh</title>
    <link>https://nolleh.github.io/tags/async/</link>
    <description>Recent content in async on The Computer Programmer, Nolleh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Fri, 21 Dec 2018 22:02:13 +0900</lastBuildDate><atom:link href="https://nolleh.github.io/tags/async/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>비동기 프로그램의 제어 흐름</title>
      <link>https://nolleh.github.io/csharp/async-control-flow-msdn/</link>
      <pubDate>Fri, 21 Dec 2018 22:02:13 +0900</pubDate>
      
      <guid>https://nolleh.github.io/csharp/async-control-flow-msdn/</guid>
      <description>개요 다음에서 발췌
비동기 프로그램의 제어 흐름
코드 public partial class MainWindow : Window { // . . . private async void startButton_Click(object sender, RoutedEventArgs e) { // ONE Task&amp;lt;int&amp;gt; getLengthTask = AccessTheWebAsync(); // FOUR int contentLength = await getLengthTask; // SIX resultsTextBox.Text += $&amp;#34;\r\nLength of the downloaded string: {contentLength}.\r\n&amp;#34;; } async Task&amp;lt;int&amp;gt; AccessTheWebAsync() { // TWO HttpClient client = new HttpClient(); Task&amp;lt;string&amp;gt; getStringTask = client.GetStringAsync(&amp;#34;https://msdn.microsoft.com&amp;#34;); // THREE string urlContents = await getStringTask; // FIVE return urlContents.</description>
    </item>
    
  </channel>
</rss>
