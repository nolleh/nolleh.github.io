<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kernel on The Computer Programmer, Nolleh</title>
    <link>https://nolleh.github.io/tags/kernel/</link>
    <description>Recent content in Kernel on The Computer Programmer, Nolleh</description>
    <generator>Hugo -- 0.113.0</generator>
    <language>ko-KR</language>
    <lastBuildDate>Sun, 07 Jan 2024 12:55:07 +0900</lastBuildDate>
    <atom:link href="https://nolleh.github.io/tags/kernel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>5.securing the Boot Procss and Hardware Resources</title>
      <link>https://nolleh.github.io/linux/18.local-security-principles/5.securing-the-boot-procss-and-hardware-resources/</link>
      <pubDate>Sun, 07 Jan 2024 12:55:07 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/18.local-security-principles/5.securing-the-boot-procss-and-hardware-resources/</guid>
      <description>Requiring Boot Loader Passwords You can secure the boot process with a secure epassword to prevent someone from bypassing the user authentication step. This can work in conjunction with password protection for the BIOS. Note that while using a bootloader passwrd laone will stop a user from editing the bootloader configuration during the boot process, it will not prevent a user from booting from and alterantive boot media such as optical disks or pen drives.</description>
    </item>
    <item>
      <title>4.working With Passwords</title>
      <link>https://nolleh.github.io/linux/18.local-security-principles/4.working-with-passwords/</link>
      <pubDate>Sun, 07 Jan 2024 12:41:06 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/18.local-security-principles/4.working-with-passwords/</guid>
      <description>How Passwords Are Stored The system verifies authenticity and identity using user credentials.
Originally, encrypted passwords wer stored in the /etc/passwd file, which was readable by everyone. this mde it rather easy for passwords to be craked.
On modern systems. passwords are actually stored in an encrypted format in a secondary file named etc/shadow Onyly those with root access can read or modify this file.
Password Encrpytion Protecting passwords has became a curucial element of security.</description>
    </item>
    <item>
      <title>3.sudo Process Isolation Limiting Hardware Access and Keeping Systems Current</title>
      <link>https://nolleh.github.io/linux/18.local-security-principles/3.sudo-process-isolation-limiting-hardware-access-and-keeping-systems-current/</link>
      <pubDate>Sun, 07 Jan 2024 12:11:04 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/18.local-security-principles/3.sudo-process-isolation-limiting-hardware-access-and-keeping-systems-current/</guid>
      <description>The sudoers File /etc/sudoers contains a lot of documentation in it about how to customize. Most Linux distributions now prefer you add a file in the directory etc/sudoers.d with a name the same as user.
this file contains the individual user&amp;rsquo;s sudo configuration, and one should leave the main configuration file untouched except for changeds that affect that affect all users.
sudo commands and any failures are logged in &amp;hellip;</description>
    </item>
    <item>
      <title>2.understanding Linux Security</title>
      <link>https://nolleh.github.io/linux/18.local-security-principles/2.understanding-linux-security/</link>
      <pubDate>Sat, 06 Jan 2024 16:26:12 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/18.local-security-principles/2.understanding-linux-security/</guid>
      <description>User Accounts Linux kernel authenticated users to access files and applications. while each user is identified by a unique integer (the user id or UID), a separate database associates a username with each UID.
Types of Accounts By default, Linux distinguishes between several account types in order to isolate processes and workloads.
Linux has fourtypes of accounts:
root System Normal Network For a safe working env, it is advised to grant minimum privileges possible and necessary to accounts, and remove inactive accounts.</description>
    </item>
    <item>
      <title>4.manipulating Postscript and Pdf Files</title>
      <link>https://nolleh.github.io/linux/17.printing/4.manipulating-postscript-and-pdf-files/</link>
      <pubDate>Sat, 06 Jan 2024 14:42:02 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/17.printing/4.manipulating-postscript-and-pdf-files/</guid>
      <description>Working with PostScript and PDF PostScript is a standard page description language. it effectively manages scalilng of fonts and vector graphics to provide quality printouts.
The format itself is a language that Adobe developed in the early 1980s to enable the transfer of data to printers.
Feature of PostScript are:
it can be used on any printer that is PostScript-compatible, i.e., any modern printer. Any program that understands the PostScript specification can print to it.</description>
    </item>
    <item>
      <title>2.configuration</title>
      <link>https://nolleh.github.io/linux/17.printing/2.configuration/</link>
      <pubDate>Fri, 05 Jan 2024 22:23:34 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/17.printing/2.configuration/</guid>
      <description>Printing on Linux printing itself requires software that converts information from application you are using to a language your printer can understand.
The Linux standard for printing software is the Common UNIX Printing System (CUPS)
Modern Linux desktop systems make installing and administering printers simple and intuitive.
Nevertheless, it is instructive to understand the underpinnings of how it is done in Linux.
CUPS Overview CUPS interprets page descriptions produced by your application (put a paragraph here, draw a line there, and so forth) and then sends the information to the printer.</description>
    </item>
    <item>
      <title>Some Additional Useful Techniques</title>
      <link>https://nolleh.github.io/linux/16.more-on-bash-shell-scripting/some-additional-useful-techniques/</link>
      <pubDate>Thu, 04 Jan 2024 21:38:12 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/16.more-on-bash-shell-scripting/some-additional-useful-techniques/</guid>
      <description>$RANDOM: environment variable for
performing security-related tasks Reinitializing storage devices Erasing and/or obscuring existing data Generating meaningless data to be used for tests How the Kernel Generates Random Numbers Some servers have hardware random number generators that take as input different types of noise signals, such as thermal noise and photoelectric effect. A transducer converts this noise into an electric signal, which is again converted into a digital number by an A-D converter.</description>
    </item>
    <item>
      <title>3.syntax</title>
      <link>https://nolleh.github.io/linux/15.the-bash-shell-and-basic-scripting/3.syntax/</link>
      <pubDate>Tue, 26 Dec 2023 22:19:46 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/15.the-bash-shell-and-basic-scripting/3.syntax/</guid>
      <description>Basic Syntax and Special Characters Character Description # comment, shebang, # \ nextline, escapecode ; used to interpret what follows as a new command to be executed $ environment variable &amp;gt; redirect output &amp;raquo; Append output &amp;lt; Redirect input | pipe the result into next command Putting Multiple Commands on a Single Line # run consequent command whether or not preceding one succeeded. $ make ; make install ; make clean # proceed next command only when preceding one succeeded.</description>
    </item>
    <item>
      <title>2.features and Capabilities</title>
      <link>https://nolleh.github.io/linux/15.the-bash-shell-and-basic-scripting/2.features-and-capabilities/</link>
      <pubDate>Mon, 25 Dec 2023 23:17:13 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/15.the-bash-shell-and-basic-scripting/2.features-and-capabilities/</guid>
      <description>script&amp;rsquo;s return value is stored in the environment variable represented by $?:
echo $? </description>
    </item>
    <item>
      <title>1.introduction</title>
      <link>https://nolleh.github.io/linux/15.the-bash-shell-and-basic-scripting/1.introduction/</link>
      <pubDate>Mon, 25 Dec 2023 22:57:05 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/15.the-bash-shell-and-basic-scripting/1.introduction/</guid>
      <description> Explain the features and capabilities of bash shell scripting. Know the basic syntax of scripting statements. Be famailiar with various methods and constructs used. Test for properties and existence of files and other objects. Use conditional statements, such as if-then-else blocks. Perform arithmetic operations using scripting language. </description>
    </item>
    <item>
      <title>5.transferring Files</title>
      <link>https://nolleh.github.io/linux/14.network-operations/5.transferring-files/</link>
      <pubDate>Mon, 25 Dec 2023 21:54:44 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/14.network-operations/5.transferring-files/</guid>
      <description>FTP (File Transfer Protocol) FTP is a well-known and popular method for transferring files between computers using the internet. This method is built on a client-server model.
one of the oldest method of network data transfer, dating back to the early 1970s. As such, it is considered inadequate for modern needs, as well as begin intrinsically insecure. However, it is still in use and when security is not a concern (such as with so-called anonymous FTP) it can make sense.</description>
    </item>
    <item>
      <title>4.browsers Wget and Curl</title>
      <link>https://nolleh.github.io/linux/14.network-operations/4.browsers-wget-and-curl/</link>
      <pubDate>Mon, 25 Dec 2023 21:47:59 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/14.network-operations/4.browsers-wget-and-curl/</guid>
      <description>wget Large file downloads Recursive downloads, where a web page refers to other web pages and all are downloaded at once Password-required downloads Multiple file downloads curl Besides downloading, you may want to obtain information about a URL, such as the source code being used. curl can be used from the command line or a script to read such information.</description>
    </item>
    <item>
      <title>3.networking Configuration and Tools</title>
      <link>https://nolleh.github.io/linux/14.network-operations/3.networking-configuration-and-tools/</link>
      <pubDate>Mon, 25 Dec 2023 21:26:56 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/14.network-operations/3.networking-configuration-and-tools/</guid>
      <description>more networking tools ethtool
Queries network interfaces and can also set various parameters such as the speed netstat
option r is for active connection nmap
scans open ports on a networks; important for security analysis tcpdump
dumps network traffic for anaysis iptraf
monitors network traffic in text mode mtr
combines functionality of ping and traceroute and gives a continuously updated display dig
Tests DNS workings;a good replacement for host and nslookup </description>
    </item>
    <item>
      <title>2.introduction to Networking</title>
      <link>https://nolleh.github.io/linux/14.network-operations/2.network-addresses-and-dns/</link>
      <pubDate>Mon, 25 Dec 2023 18:10:12 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/14.network-operations/2.network-addresses-and-dns/</guid>
      <description>IPv4 and IPv6 IPv4 uses 32-bits for addresses;there are only 4.3 bilion unique addresses available.
IPv6 uses 128-bits for addresses; this allows for 3.4 * 10^38 unique addresses.
One reason IPv4 has not disappeared is there are widely-used ways t o effectively make many more addresses available by methods such as NAT(Network Address Translation). NAT enables sharing one IP address among many locally connected computers, each of which has a unique address only seen on the local network.</description>
    </item>
    <item>
      <title>1.introduction</title>
      <link>https://nolleh.github.io/linux/14.network-operations/1.introduction/</link>
      <pubDate>Mon, 25 Dec 2023 18:07:03 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/14.network-operations/1.introduction/</guid>
      <description> Explain basic networking concepts, including types of networks and addressing issues. Configure network interfaces and use basic networking utilities, such as ifconfig, ip, ping, route and traceroute Use grphical and non-graphical browsers, such as Lynx, w3m, Firefox, Chrome and Epiphany. Transfer files to and from clients and servers using both graphical and text mode applications, such as scp, ftp, sftp, curl and wget. </description>
    </item>
    <item>
      <title>7.miscellaneous Text Utilities</title>
      <link>https://nolleh.github.io/linux/13.manipluating-text/7.miscellaneous-text-utilities/</link>
      <pubDate>Mon, 25 Dec 2023 17:36:43 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/13.manipluating-text/7.miscellaneous-text-utilities/</guid>
      <description>tr the tr utility is used to translate specified characters into other characters or to delete them.
tr [options] set1 [set2] set1: to be replaced or removed set2: to be substituted for the characters listed in the first argument.
tr &amp;lsquo;{}&amp;rsquo; &amp;lsquo;()&amp;rsquo; &amp;lt; inputfile &amp;gt; outputfile
translate braces into parenthesis echo &amp;quot; &amp;hellip; &amp;quot; | tr [:space:] &amp;lsquo;\t&amp;rsquo;
translate white-space to tabs echo &amp;ldquo;This is for testing&amp;rdquo; | tr -s [:space:]</description>
    </item>
    <item>
      <title>6.grep</title>
      <link>https://nolleh.github.io/linux/13.manipluating-text/6.grep/</link>
      <pubDate>Mon, 25 Dec 2023 17:19:18 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/13.manipluating-text/6.grep/</guid>
      <description>grep grep [0-9] print the lines that contain the numbers 0 through 9 grep -C 3 [pattern] print context of lines (specified number of lines above and below the pattern) for matching the pattern. Here, the number of lines is specified as 3 strings strings is used to extract all character strings found in the file or files given as arguments. it is useful in locating human-readable content embedded in binary files; for text files one can just use grep</description>
    </item>
    <item>
      <title>5.file Manipulation Utilities</title>
      <link>https://nolleh.github.io/linux/13.manipluating-text/5.file-manipulation-utilities/</link>
      <pubDate>Mon, 25 Dec 2023 15:20:05 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/13.manipluating-text/5.file-manipulation-utilities/</guid>
      <description>sort sort -k 3 sort the lines by the 3rd field on each line instead of the beginning sort -u equivalent to run uniq after sort
uniq uniq removes duplicate consecutive lines in a text file and is useful for simplifying the text display uniq requires that the duplicate entries must be consecutive, one often runs sort first and then pipes the output into uniq;
to count the number of duplicate entries, use the following command:</description>
    </item>
    <item>
      <title>4.sed and Awk</title>
      <link>https://nolleh.github.io/linux/13.manipluating-text/4.sed-and-awk/</link>
      <pubDate>Mon, 25 Dec 2023 14:39:39 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/13.manipluating-text/4.sed-and-awk/</guid>
      <description>introduction to sed and awk many Linux users and administrators will write scripts using comprehensive scripting languages such as Python and perl,
rather than use sed and awk. However, the utilitites that are described here are much lighter;i.e. they use fewer system resources,
and execute faster.
sed abbreviation for stream editor.
data from an input source/file (or stream) is taken and moved to a working space.
the entire list of operations/modifications is applied over the data in the working space and</description>
    </item>
    <item>
      <title>3.working With Large and Compressed Files</title>
      <link>https://nolleh.github.io/linux/13.manipluating-text/3.working-with-large-and-compressed-files/</link>
      <pubDate>Mon, 25 Dec 2023 14:29:53 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/13.manipluating-text/3.working-with-large-and-compressed-files/</guid>
      <description>working with large files directly opening the file in an editor will probably be inefficient (due to high memory utilization) because most text editors usually try to read the whole file into memory first.
instead, one can use less to view the contents of such a large file, scrolling up and down page by page, without the system having to place the entire file in memory before starting.
less somefile cat somefile | less head reads the first few lines</description>
    </item>
    <item>
      <title>2.cat and Echo</title>
      <link>https://nolleh.github.io/linux/13.manipluating-text/2.cat-and-echo/</link>
      <pubDate>Mon, 25 Dec 2023 14:12:57 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/13.manipluating-text/2.cat-and-echo/</guid>
      <description>cat cat
read / write / concatenate tac prints the lines of a file in reverse order. each line remains the same, but the order of lines is inverted. cat &amp;gt; file cat &amp;raquo; file (any subsequenet lines are appended to the file, until CTRL-D is typed)
using cat interactively echo -e option, along with the following switches, is used to enable special character sequences,
such as the newline character or horizontal tab</description>
    </item>
    <item>
      <title>2.accounts,users and groups</title>
      <link>https://nolleh.github.io/linux/12.user-environment/2.accounts-users-and-groups/</link>
      <pubDate>Sun, 24 Dec 2023 18:05:04 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/12.user-environment/2.accounts-users-and-groups/</guid>
      <description>elevating to root account sudo configuration files are stored in the /tec/sudoers file and in the /etc/sudoers.d directory. by default, the sudoers.d directory is empty</description>
    </item>
    <item>
      <title>7.summary</title>
      <link>https://nolleh.github.io/linux/10.file-operations/7.summary/</link>
      <pubDate>Sun, 24 Dec 2023 16:46:33 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/10.file-operations/7.summary/</guid>
      <description>filesystems lick /proc are called pseudo filesystems because they exist only in memory
/var may be put in its own filesystem so that growth can be contained and not fatally affect the ststem
/boot contains the basic files needed to boot the system</description>
    </item>
    <item>
      <title>5.backing Up and Compressing Data</title>
      <link>https://nolleh.github.io/linux/10.file-operations/5.backing-up-and-compressing-data/</link>
      <pubDate>Sun, 24 Dec 2023 15:42:26 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/10.file-operations/5.backing-up-and-compressing-data/</guid>
      <description>1. Backing Up Data cp &amp;lt;-&amp;gt; rsync
rsync is more efficient, because it checks if the file being copied already exists. rsync copies only the parts of files that have actually changed, it can be very fast cp can only copy files to and from destinations on the local machine (unless mounted using NFS), rsync can also be used to copy files from one machine to another. someone@host:path 2. Using rsync a very useful way to back up a project directory might be to use the following command.</description>
    </item>
    <item>
      <title>4.comparing Files and File Types</title>
      <link>https://nolleh.github.io/linux/10.file-operations/4.comparing-files-and-file-types/</link>
      <pubDate>Sun, 24 Dec 2023 15:09:57 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/10.file-operations/4.comparing-files-and-file-types/</guid>
      <description>3. using the file utility in linux, a file&amp;rsquo;s extension does not, by default, ategorize its nature the way it might in other operating systems. for example, one cannot assume that a file named &amp;ldquo;file.txt&amp;rdquo; is a text file and not an executable program.
6. Lab10.2: Using diff and patch diff -Naur original modified &amp;gt; original.patch patch original &amp;lt; original.patch </description>
    </item>
    <item>
      <title>Searching For Files</title>
      <link>https://nolleh.github.io/linux/7.command-line-operations/searching-for-files/</link>
      <pubDate>Mon, 02 Oct 2023 19:56:54 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/7.command-line-operations/searching-for-files/</guid>
      <description>A special shorthand notation can send anything written to file descriptor 2 (stderr) to the same place as file descriptor 1 (stdout): 2&amp;gt;&amp;amp;1.
$ do_something &amp;gt; all-output-file 2&amp;gt;&amp;amp;1
bash permits an easier syntax for the above:
$ do_something &amp;gt;&amp;amp; all-output-file
in pipe&amp;hellip; $ command1 | command2 | command3
The above represents what we often call a pipeline, and allows Linux to combine the actions of several commands into one. This is extraordinarily efficient because command2 and command3 do not have to wait for the previous pipeline commands to complete before they can begin processing at the data in their input streams</description>
    </item>
    <item>
      <title>2.system Display Date and Time Settings</title>
      <link>https://nolleh.github.io/linux/5.system-configuration-from-the-graphical-interface/2.system-display-date-and-time-settings/</link>
      <pubDate>Sat, 30 Sep 2023 11:06:13 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/5.system-configuration-from-the-graphical-interface/2.system-display-date-and-time-settings/</guid>
      <description>the system actually provide display settings, is uses /etc/x11/xorg.conf
in recent linux, the file usually present in unusual cricumstatnce such as when cirtain Less
common graphic drivers are in use.
changing the file is usually for more advanced users.
Network Time Protocol the Network Time Protocol is most popular and reliable protocol for setting local time by consulting established internet servers.
student:/tmp&amp;gt; $ xdpyinfo | grep dim dimensions: 3200x1080 pixels (847x286 millimeters) </description>
    </item>
    <item>
      <title>1.learning Objectives</title>
      <link>https://nolleh.github.io/linux/5.system-configuration-from-the-graphical-interface/1.learning-objectives/</link>
      <pubDate>Sat, 09 Sep 2023 19:19:58 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/5.system-configuration-from-the-graphical-interface/1.learning-objectives/</guid>
      <description>apply system, display, timesetting.. track the network settings and manage connections using network manager in linux. install and update software in linux from a graphical interface.</description>
    </item>
    <item>
      <title>4-2.graphical Desktop</title>
      <link>https://nolleh.github.io/linux/4.graphical-interface/2.graphical-desktop/</link>
      <pubDate>Sun, 08 Jan 2023 23:02:17 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/4.graphical-interface/2.graphical-desktop/</guid>
      <description>Graphical Desktop Graphical Desktop CLI or GUI.
GUI is quick and easy.
for repeated tasks, the CLI is often more efficient, while the GUI is easier to navigate if you do not remember all the details or do something only rarely.
X Window System X window system is loaded as one of the final steps in boot process. It is often just called X.
A service called the Display Manager keeps track of displays being provided and loads the X server (so-called, because it provides graphical services to applications, sometimes called X clients.</description>
    </item>
    <item>
      <title>4-1.introduction</title>
      <link>https://nolleh.github.io/linux/4.graphical-interface/1.introduction/</link>
      <pubDate>Sun, 08 Jan 2023 23:00:29 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/4.graphical-interface/1.introduction/</guid>
      <description>Graphical interface Learning Objectives By the end of this chapter, you should be able to:
Manage graphical interface sessions. Perform basic operations using the graphical interface. Change the graphical desktop to suit your needs. </description>
    </item>
    <item>
      <title>3-6.summary</title>
      <link>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/6.summary/</link>
      <pubDate>Sun, 08 Jan 2023 15:32:36 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/6.summary/</guid>
      <description>Summary Chapter Summary A partition is a logical part of the disk. A filesystem is a method of storing/finding files on a hard disk. By dividing the hard disk into partitions, data can be grouped and separated as needed. When a failure or mistake occurs, only the data in the affected partition will be damaged, while the data on the other partitions will likely survive. The boot process has multiple steps, starting with BIOS, which triggers the boot loader to start up the Linux kernel.</description>
    </item>
    <item>
      <title>3-5.linux Distribution Installation</title>
      <link>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/5.linux-distribution-installation/</link>
      <pubDate>Sun, 08 Jan 2023 14:15:48 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/5.linux-distribution-installation/</guid>
      <description>Linux Distribution Installation Choosing a Linux Distribution Questions to Ask when Choosing a Distribution What is the main function of the system (server or desktop)? What types of packages are important to the organization? For example, web server, word processing, etc. How much hard disk space is required and how much is available? For example, when installing Linux on an embedded device, space is usually constrained. How often are packages updated?</description>
    </item>
    <item>
      <title>3-4.linux Filesystem Basics</title>
      <link>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/4.linux-filesystem-basics/</link>
      <pubDate>Sun, 08 Jan 2023 13:44:22 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/4.linux-filesystem-basics/</guid>
      <description>3-4. Linux FileSystem Basics Linux FileSystem Conventional disk filesystems: ext3, ext4, XFS, Btrfs, JFS, NTFS, vfat, exfat, etc. Flash storage filesystems: ubifs, jffs2, yaffs, etc. Database filesystems Special purpose filesystems: procfs, sysfs, tmpfs, squashfs, debugfs, fuse, etc. Partitions and Filesystems A partition is physically contiguous section of disk, or what appears to be so in some advanced setups.
A filesystem is a method of storing/finding files on the hard disk (usually in a partition).</description>
    </item>
    <item>
      <title>3-3.kernel Init and Services</title>
      <link>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/3.kernel-init-and-services/</link>
      <pubDate>Sun, 08 Jan 2023 12:25:09 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/3.kernel-init-and-services/</guid>
      <description>Kernel, init and Services The Linux Kernel boot loader loads kernel and an initial RAM-based file system (initramfs) into memory, so it can be used directly by the kernel.
kernel loaded, it immediately initializes and configures the computer&amp;rsquo;s memory and also configures all the hardware attached to the system.
also load user space applications.
/sbin/init and Services Once kernel has set up all its hardware and mounted the root filesystem, the kernel runs sbin/init.</description>
    </item>
    <item>
      <title>3-2.the Boot Process</title>
      <link>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/2.the-boot-process/</link>
      <pubDate>Sun, 25 Dec 2022 22:21:34 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/2.the-boot-process/</guid>
      <description>The Boot Process The Linux boot process is the procedure for initializing the system.
from when the computer power is first swithced on until the user interface is fully operational.
having a good understanding of the steps in the boot process may help you with troubleshooting problems, as well as with tailoring the computer&amp;rsquo;s performance to your needs.
On the other hand, the boot process can be rather technical, and you can start using Linux without knowing all the details.</description>
    </item>
    <item>
      <title>3-1.introduction</title>
      <link>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/1.introduction/</link>
      <pubDate>Sun, 25 Dec 2022 22:19:08 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/3.linux-basics-and-system-startup/1.introduction/</guid>
      <description>Learning Objectives Identify Linux filesystems. Identify the differences between partitions and filesystems Describe the boot process. Install Linux on a computer. </description>
    </item>
    <item>
      <title>2-6.chapter summary</title>
      <link>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/6.chapter-summary/</link>
      <pubDate>Sun, 25 Dec 2022 22:02:31 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/6.chapter-summary/</guid>
      <description>Chapter Summary Linux boroows heavily from UNIX operating system, with withch its creators were well-versed. LInux accesses many features and services through files and file-like objects. Linux is a fully multi-tasking, multi-user operating system, with built-in networking and service processes known as deamons. Linux is developed by a loose confederation of developers from all over the world, collaborating over the Internet,
with Linus Torvalds at th head. Technical sill and a desire to contriubte are the only qualifications for participating.</description>
    </item>
    <item>
      <title>2-5.linux Distribution</title>
      <link>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/5.linux-distribution/</link>
      <pubDate>Sun, 25 Dec 2022 21:38:28 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/5.linux-distribution/</guid>
      <description>Linux Distribution Overview making sure that project works properly on the most widely used Linux distributions. To accomplish this, you need to learn amout the different components, services, and configurations associated with each distribution.</description>
    </item>
    <item>
      <title>2-4.linux Terminology Overview</title>
      <link>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/4.linux-terminology-overview/</link>
      <pubDate>Sun, 25 Dec 2022 21:27:09 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/4.linux-terminology-overview/</guid>
      <description>Video: Linux Terminology Kernel: Glue between hardware and applications
Ditribution: Collection of software making up a Linux-based OS
BootLoader: Program that boots the operating system
Service: Program that runs as a background process
Filesystem: Method for sotring and organizing files
X window System: toolkit and protocol to build graphical subsystem
Shell: command line interpreter</description>
    </item>
    <item>
      <title>2-3.linux Philosophy</title>
      <link>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/3.linux-philosophy/</link>
      <pubDate>Sun, 25 Dec 2022 14:37:33 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/3.linux-philosophy/</guid>
      <description>Linux Philosophy Overview Linux is constantly enhanced and maintained by a network of developers from all over the world collaborating over the internet, with Linus Torvalds at the head.
Linux Philosophy Linux borrows heavily from the well-established UNIX operating system. it was written to be a free and open source system to be used in place of UNIX,
which at the time was designed for computers much more powerful than PCs and was quite expensive.</description>
    </item>
    <item>
      <title>2-2.linux History</title>
      <link>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/2.linux-history/</link>
      <pubDate>Sun, 11 Dec 2022 23:42:16 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/2.linux-history/</guid>
      <description>Linux History Overview initially developed on and for intel x86-based personal computers.
Linux History Linus Torvalds was a student in Helsinki, Finland, in 1991, when he started a project: writing his own operating system kernal. collected together and/or developed the other essential ingredients required to construct an entire operating system with his kernel at the center.
In 1992, Linux was re-licensed using General Public License (GPL) by GNU (a project of the Free Software Foundation or FSF, which promotes freely available software),</description>
    </item>
    <item>
      <title>2-1.introduction</title>
      <link>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/1.introduction/</link>
      <pubDate>Sun, 11 Dec 2022 23:23:50 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/2.linux-philosophy-and-concepts/1.introduction/</guid>
      <description>The Power of Linux Three Important Pieces of Context Things change in Linux
Linux is contantly evolving. no matter how hard to make up-to-date as possible, Course &amp;lt;-/-&amp;gt; Linux
We have repeated some things in the class meterial
We have tried to avoid holy wars
there are many areas where there are strong preference disagreements in the Linux (and wider open source) community. examples include the best editor: emacs vs. vi; GNOME vs.</description>
    </item>
    <item>
      <title>1-3.course Linux Requirements</title>
      <link>https://nolleh.github.io/linux/1.the-linux-foundation/3.course-linux-requirements/</link>
      <pubDate>Sun, 11 Dec 2022 22:23:30 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/1.the-linux-foundation/3.course-linux-requirements/</guid>
      <description>Course Software Requirements to fully benefit from this course, at least one linux distribution installed.
you will learn some more details about many available Linux distributions and the failies thy can be considered to belong to.
focus on 3 major distribution families.
Focus on Three Major Linux Distribution Families The Red Hat Family Red Hat Enterprise Linux (RHEL) heads the family that includes CentOS, CentOS Stream, Fedora and Oracle Linux.</description>
    </item>
    <item>
      <title>1-2.the Linux Foundation</title>
      <link>https://nolleh.github.io/linux/1.the-linux-foundation/2.the-linux-foundation/</link>
      <pubDate>Sun, 11 Dec 2022 21:55:34 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/1.the-linux-foundation/2.the-linux-foundation/</guid>
      <description>founded in 2000, supported by more than 1,000 members and is the world&amp;rsquo;s leading home for collaboration on open source software.
the foundation hosts hundreds of world&amp;rsquo;s most important open source projects including linux, kubernetes, Node.js, Hyperledger, ONAP&amp;hellip; and many more.</description>
    </item>
    <item>
      <title>1-1.Introduction</title>
      <link>https://nolleh.github.io/linux/1.the-linux-foundation/1.introduction/</link>
      <pubDate>Sun, 11 Dec 2022 21:55:20 +0900</pubDate>
      <guid>https://nolleh.github.io/linux/1.the-linux-foundation/1.introduction/</guid>
      <description>we will learn&amp;hellip;
linux foundation logistics of this online course choosing a linux distribution that&amp;rsquo;s right for you </description>
    </item>
    <item>
      <title>파일 버퍼링</title>
      <link>https://nolleh.github.io/operating-system/file-buffering/</link>
      <pubDate>Mon, 17 Jul 2017 00:25:28 +0900</pubDate>
      <guid>https://nolleh.github.io/operating-system/file-buffering/</guid>
      <description>다음에서 발췌, 번역
https://msdn.microsoft.com/en-gb/library/windows/desktop/cc644950(v=vs.85).aspx File Buffering 파일버퍼링 - unbuffered file I/O.
본문에선 시스템에 의해 캐싱되지 않는 (buffered) 데이터를
어떻게 유저 모드의 응용프로그램에서 데이터를 활용할 수 (interact) 있을지에 대해 다룬다.
FILE_FLAG_NO_BUFFERING 플래그를 통해 CreateFile 을 Open 하면,
파일을 읽거나 쓸때 시스템의 캐싱을 비활성화 하도록 제어할 수 있다.
I/O 버퍼링을 사용한것과 같은 효과를 내려면, 데이터 alignment 가 반드시 고려되어야 한다.
Note 파일에 대해 Seeking 과 위치포인터, offsets 의 개념을 사용하는 파일에 대해 alignment 정보가 고려될 필요가 있다.</description>
    </item>
  </channel>
</rss>
